Data

TellerRole teller;
Enum CustomerState{none, waiting, ready, needAccount, done}
int accountID;
Person p;

Scheduler 

if CustomerState == ready {
	if p.state == depositMoney {
		DepositMoney();
	}
	if p.state == withdrawMoney {
		WithdrawMoney();
	}
}
if CustomerState == done {
	LeaveBank();
}
if CustomerState == needAccount {
	CreateAccount();
}

Actions

DepositMoney(){
	if accountID == NULL {
	    p.wallet -= p.depositMoney;
  		p.depositMoney = 0;
		teller.msgDepsit(p.depositMoney);
  	}
  	else {
  		p.wallet -= p.depositMoney;
  		p.depositMoney = 0;
  		teller.msgDeposit(accountID, p.depositMoney);
  	}
}

WithdrawMoney(){
	if accountID == NULL {
		CustomerState = done;
  	}
  	else {
  		teller.msgWithdraw(accountID, p.neededMoney);
  	}
}

LeaveBank(){
	DoLeaveBank();
	p.msgDone();
}

CreateAccount(){
	teller.msgCreateAccount(p.name, p.depositMoney);
}

Messages

msgIsActive(){
	p.CustomerState = waiting;
}

msgReadyToHelp(TellerRole t){
	teller = t;
	p.CustomerState = ready;
}

msgDepositSuccessful(double balance){
	print(balance);
	p.CustomerState = done;
}

msgCreateAccount(){
	p.CustomerState = needAccount;
}

msgAccountBalance(int accID, double balance){
	accountID = accID;
	print(balance);
	p.CustomerState = done;
}

msgWithdrawSuccessful(double money){
	p.wallet += money;
	p.CustomerState = done;
}

msgGiveLon(double money){
	p.wallet += money;
	p.CustomerState = done;
}



  