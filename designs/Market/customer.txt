CUSTOMER

Data
------
Enum customerState = {GotHungry,AtRestaurant,Paying,Paid,OrderCompleted,LeftRestaurant}
Order order;
double wallet;
class Order {
	List<Integer> itemsNeeded; //each "item" is a unique ID that corresponds with a certain item.
	Waiter w;
	double totalDue;
	double totalReceived;
}
Employee employee;

Messages
------

msgGotHungry(List<Integer> itemsNeeded) //From Gui {
	order = new Order(itemsNeeded);
	customerState = GotHungry;
}
msgHereIsWhatIsDue(totalDue) {
	order.totalDue = totalDue;
	customerState = Paying;
}
msgHereIsYourOrder(List<Integer>itemsReceived) {
	if(itemsNeeded.size() != itemsReceived.size() {
		//Didn't receive the right number of items (how to handle?)
	} else {
		customerState = OrderCompleted;
	}
}
msgHereIsChange(double totalChange) {
	customerState = OrderCompleted;
}

Scheduler
--------
if(customerState = GotHungry) {
	beginScenario();
}
if(customerState = Paying) {
	payBill();
}
if(customerState = OrderCompleted) {
	returnHome();
}

Actions
-------
beginScenario() {
	DoGoToRestaurant();
	customerState = AtRestaurant;
}

payBill() {
	employee.msgHereIsPayment(wallet);
	customerState = Paid;	
}
returnHome() {
	DoGoHome();
	CustomerState = LeftRestaurant;
}